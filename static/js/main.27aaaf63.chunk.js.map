{"version":3,"sources":["icons/bicycle.svg","services/velib-service.js","components/tableInfo.jsx","components/slider.jsx","icons/VelibLogo.js","components/velib.jsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","maxStations","getStations","axios","get","TableInfo","a","activeMarker","className","codeStation","nomStation","style","etatStation","color","nbBornesTotal","nbBornesDisponibles","nbVelosMecaniques","nbVelosElectriques","achatCB","recordTime","sliderThumbStyles","opacity","bicycle","Styles","styled","div","props","Slider","this","maxMarkers","value","onChange","type","min","step","max","e","target","Component","SvgVelibLogo","width","height","viewBox","d","fill","Velib","state","rangeMarkers","markers","filtredMarkers","showingInfoWindow","selectedPlace","position","lat","lng","countStyle","fontSize","getData","data","nhits","records","forEach","hasOwnProperty","geometry","coordinates","Date","record_timestamp","toLocaleDateString","fields","station_code","station_name","station_state","nbedock","nbfreeedock","nbbike","nbebike","creditcard","push","setState","onChangeMarkersRange","getFiltredMarkers","slice","onMarkerClick","marker","markerSource","find","m","uid","Object","assign","activePosition","onMapClicked","google","onClick","zoom","initialCenter","map","key","name","title","visible","id","marginTop","GoogleApiWrapper","apiKey","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.27aaaf63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bicycle.52b16f13.svg\";","import axios from \"axios\";\r\n\r\nconst maxStations = 1362;\r\n\r\nfunction getUrl() {\r\n  return (\r\n    \"https://opendata.paris.fr/api/records/1.0/search/?dataset=velib-disponibilite-en-temps-reel&rows=\" +\r\n    maxStations\r\n  );\r\n}\r\n\r\nfunction getStations() {\r\n  return axios.get(getUrl());\r\n}\r\n\r\nexport { getStations };\r\n","import React from \"react\";\r\n\r\nconst TableInfo = ({ activeMarker: a }) => {\r\n  return (\r\n    <table className=\"table table-bordered\">\r\n      <tbody>\r\n        <tr>\r\n          <th>\r\n            <span> Code de la station</span>\r\n          </th>\r\n          <td>\r\n            <span>{a.codeStation}</span>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>\r\n            <span> Nom de la station</span>\r\n          </th>\r\n          <td>\r\n            <span>{a.nomStation}</span>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>\r\n            <span> Etat de la station</span>\r\n          </th>\r\n          <td>\r\n            <span\r\n              style={\r\n                a.etatStation === \"Operative\"\r\n                  ? { color: \"green\" }\r\n                  : { color: \"red\" }\r\n              }\r\n            >\r\n              {a.etatStation}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>\r\n            <span> Nombre de bornes en station</span>\r\n          </th>\r\n          <td>\r\n            <span>{a.nbBornesTotal}</span>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>\r\n            <span> Nombre de bornes disponibles</span>\r\n          </th>\r\n          <td>\r\n            <span>{a.nbBornesDisponibles}</span>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>\r\n            <span> Nombre de vélos mécaniques</span>\r\n          </th>\r\n          <td>\r\n            <span>{a.nbVelosMecaniques}</span>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>\r\n            <span> Nombre de vélos électriques</span>\r\n          </th>\r\n          <td>\r\n            <span>{a.nbVelosElectriques}</span>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>\r\n            <span> Achat possible en station (CB)</span>\r\n          </th>\r\n          <td>\r\n            <span\r\n              style={a.achatCB === \"no\" ? { color: \"red\" } : { color: \"green\" }}\r\n            >\r\n              {a.achatCB}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>\r\n            <span> Mis à jour le</span>\r\n          </th>\r\n          <td>\r\n            <span>{a.recordTime}</span>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TableInfo;\r\n","import React, { Component } from \"react\";\r\nimport bicycle from \"../icons/bicycle.svg\";\r\nimport styled from \"styled-components\";\r\n\r\nconst sliderThumbStyles = ({ opacity }) => `\r\n  width: 100px;\r\n  height: 100px;\r\n  background: no-repeat center url(${bicycle}) transparent;\r\n  cursor: pointer;\r\n  opacity: ${opacity};\r\n  -webkit-transition: .2s;\r\n  transition: opacity .2s;\r\n`;\r\n\r\nconst Styles = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 2rem;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n  .slider {\r\n    flex: 6;\r\n    -webkit-appearance: none;\r\n    width: 100%;\r\n    height: 15px;\r\n    background: #efefef;\r\n    outline: none;\r\n    &::-webkit-slider-thumb {\r\n      -webkit-appearance: none;\r\n      appearance: none;\r\n      ${props => sliderThumbStyles(props)}\r\n    }\r\n    &::-moz-range-thumb {\r\n      ${props => sliderThumbStyles(props)}\r\n    }\r\n  }\r\n`;\r\n\r\nexport default class Slider extends Component {\r\n  render() {\r\n    const { maxMarkers, value, onChange } = this.props;\r\n    return (\r\n      <Styles opacity={value > 10 ? value / maxMarkers : 0.1}>\r\n        <input\r\n          type=\"range\"\r\n          min={10}\r\n          step={10}\r\n          max={maxMarkers}\r\n          value={value}\r\n          className=\"slider\"\r\n          onChange={e => onChange(e.target.value)}\r\n        />\r\n      </Styles>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\n\nconst SvgVelibLogo = props => (\n  <svg\n    width={1024}\n    height={497}\n    viewBox=\"-1.692 -1.692 123.233 59.786\"\n    {...props}\n  >\n    <path\n      d=\"M23.718 23.378c-.897-.452-1.976-.446-2.623.017l.066-.04-1.472.757-.06.03-.05.046-2.99 2.698c-1.147.761-2.282 1.74-3.38 2.688-1.627 1.407-3.165 2.735-4.596 3.265l-1.493.656c.008-.119.022-.23.044-.302.233-.763.593-3.651.739-5.305l.024-.247c.71-7.205 1.038-11.654-.38-12.696-2.17-1.594-5.004 1.09-5.123 1.204l-.088.084-.861 2.38-.033.09.001.095.022 1.494.108 2.144c-.047.466-.558 5.368-1.348 9.691-.74 4.075.46 9.063 1.925 10.136.763.555 2.13.312 3.094-.15l2.758-1.009.836-.328.058-.023.051-.035 1.517-1.063 1.667-.986 1.08-.674 3.424-2.416c6.276-3.648 7.854-6.248 8.526-8.103.724-1.975.279-3.24-1.443-4.098\"\n      fill=\"#f7ae00\"\n    />\n    <path\n      d=\"M37.559 36.939l-1.543-.385c-1.715-.418-3.1-.878-3.49-1.157-.106-.155-.169-.807-.117-1.23.07-.545 1.347-1.697 1.957-1.622l.055.006 1.94-.189 1.29-.029 1.411.172c.94.119 1.746 1.53 1.66 2.248l-.023.191c-.163 1.435-.448 2.248-1.418 2.157l-1.722-.162zm6.77-7.27c-1.164-1.49-2.858-2.408-4.898-2.657-1.42-.111-2.879-.335-4.217.273-.246.033-1.61.237-2.961.855-1.835.875-4.696 3.366-4.816 3.472l-.094.081-.044.116c-.107.274-1.023 2.648-1.141 3.403l-.941 3.678c-.39.941-.629 1.733-.704 2.35-.133 1.087.438 2.792.503 2.983l.022.063.038.054 2.38 3.514.425.986.051.118.102.078 1.854 1.445c.137.107 3.395 2.629 6.005 2.95.51.06 1.63-.219 1.96-.306l1.333-.405.099-.03.08-.066 1.653-1.402c.08-.06 2.276-1.807 1.551-3.568-.731-1.777-3.279-1.328-3.387-1.308l-.04.007-.04.014-1.689.612-2.122-.074-1.166-.458c-2.28-1.649-3.276-3.285-3.715-4.374-.064-.16.031-.648.44-1.181.19-.245.877-1.036 1.795-.923.944.114 2.151.471 3.43.85 1.534.453 3.12.922 4.63 1.108 1.215.15 2.434-.197 3.432-.976 1.03-.806 1.71-1.993 1.866-3.258.41-3.325-.17-6.1-1.673-8.025\"\n      fill=\"#009bb7\"\n    />\n    <path\n      d=\"M60.856 47.377l-.008-.082-.296-2.822c.003.024-.24-4.54-.257-4.879l.136-3.799.001-.028-.002-.029-.576-7.368.122-2.198.002-.04-.004-.04-.12-1.148.232-6.931v-.048l-.006-.047c-.155-.986-1.04-5.896-3.214-5.692-1.757.169-2.99 1.196-3.22 2.68l-.004.026v.027l-.059 1.164-.336 1.824-.015.078.01.078c.003.022.285 2.172.275 3.09-.023.952-.428 2.465-.433 2.48l-.02.077.004.081.131 2.39-.266 2.496-.005.047.003.046.551 7.066-.55 4.327-.009.075.013.074.285 1.651.235 3.987c.011.608-.146 1.514-.3 2.39-.196 1.127-.4 2.293-.31 3.16.218 2.163 2.188 5.013 3.828 4.856 2.186-.206 3.752-2.936 3.843-5.357l.007-2.178.314-1.404.018-.08\"\n      fill=\"#dc1681\"\n    />\n    <path\n      d=\"M71.457 26.608c1.727-.346 3.265-2.722 2.737-5.385-.352-1.768-1.466-2.65-3.31-2.625l-1.763.141-.207.017-.135.158-1.182 1.392-.062.074-.03.092-.602 1.8-.026.076v.08l-.016 2.01-.001.186 1.128 1.334c.735.877 2.323.986 3.511.64l-.042.01m8.25 22.553l-.723-3.807c-.204-1.107-.426-2.974-.428-2.993l-.004-.024-.004-.023-.298-1.389-1.14-4.784-.58-2.806-.012-.058-.025-.053-.419-.898c-.292-.912-1.244-2.478-2.872-2.134-1.152.242-2.176 1.607-2.374 2.683-.005.031-.206 1.711-.206 1.711l-.202 1.39c-.41 2.999 1.674 8.938 1.912 9.606l.324 2.725c.075.406.064.904.056 1.303-.007.315-.012.563.018.742.298 1.565.752 2.473 1.475 2.953.549.365 1.226.455 2.071.275 2.185-.459 3.342-1.43 3.438-2.887v-1.486l-.008-.046\"\n      fill=\"#b0b70f\"\n    />\n    <path\n      d=\"M119.127 3.751c-.783-1.67-2.078-2.9-3.65-3.46-2.912-1.03-6.823.788-7.896 3.672-.818 2.228-.176 3.82-.149 3.887l.031.075.054.062 1.234 1.42.825.937.05.057.064.04 1.09.665-.894 1.099c-.648.348-2.345 1.33-2.66 2.208-.302.815-.311 1.542-.03 2.156.293.637.888 1.124 1.77 1.45 1.354.507 3.814-1.284 4.36-1.702 1.148-.504 1.74-1.176 2.715-2.037l.023-.027.854-.99 1.117-1.053.063-.06.04-.079c.035-.069.862-1.709 1.351-3.001.586-1.593.45-3.582-.362-5.319\"\n      fill=\"#b47db1\"\n    />\n    <path\n      d=\"M103.222 34.452l-.015.068-.654.967-.035.05-.021.059-.66 1.801c-.419.365-2.373 1.744-2.675 1.88-.974.395-1.972.342-2.959-.157-1.487-.75-2.765-2.474-3.257-4.39-.686-2.687 2.365-5.98 6.526-7.046.545-.14 1.03-.077 1.485.192 1.491.883 2.202 3.669 2.435 4.584l.026.102c.117.443-.086 1.384-.196 1.89zm6.212-4.24c-.476-1.875-1.978-4.552-2.042-4.665l-.023-.039-.028-.034-1.258-1.525-.071-.085-.099-.048-.655-.314-1.196-1.19-.122-.12-1.094-.134c-.81-.374-2.729-1.21-5.28-.56-1.04.267-3.536 1.226-3.642 1.267l-.047.018-.043.028c-.078.05-1.891 1.218-2.804 2.298-.331.418-.535.906-.716 1.336-.118.283-.315.756-.436.815-.224.058-.327.08-.587-.464l-.345-.735-.994-3.495c-.004-.016-.81-2.518-.81-2.518l-.014-.045-.021-.04-.59-1.091-1.589-5.77c-.153-.603-.636-1.043-1.358-1.228-1.228-.316-2.87.165-3.737 1.094-.647.693-.837 1.577-.536 2.487-.005-.013 1.49 4.968 1.49 4.968-.009-.025 1.033 4.264 1.033 4.264l.014.058.027.054.723 1.399 1.664 5.43.021.07.041.062 1.015 1.518 2.004 5.922.02.06.036.055.835 1.27.422 1.654c.207.806.42 1.154.607 1.462.125.203.223.363.321.666.378 1.09.626 2.866.628 2.884l.023.167.118.118c.08.08 1.98 1.967 3.964 1.463 1.081-.27 1.432-1.278 1.741-2.167l.05-.147c.194-.575 1.693-1.557 2.892-1.557 1.366 0 2.86-.912 3.167-1.11l2.533-.864.092-.031.074-.064.931-.807c.666-.36 5.842-3.481 3.651-12.04\"\n      fill=\"#6793c8\"\n    />\n  </svg>\n);\n\nexport default SvgVelibLogo;\n","import React, { Component } from \"react\";\r\nimport { Map, InfoWindow, Marker } from \"google-maps-react\";\r\nimport { getStations } from \"../services/velib-service\";\r\nimport TableInfo from \"./tableInfo\";\r\nimport Slider from \"./slider\";\r\nimport SvgVelibLogo from \"../icons/VelibLogo\";\r\n\r\nexport default class Velib extends Component {\r\n  state = {\r\n    maxMarkers: null,\r\n    rangeMarkers: 480,\r\n    markers: [],\r\n    filtredMarkers: [],\r\n    showingInfoWindow: false,\r\n    activeMarker: null,\r\n    selectedPlace: { position: { lat: 48.8724200631, lng: 2.34839523628 } }\r\n  };\r\n\r\n  countStyle = {\r\n    fontSize: \"30px\"\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.getData();\r\n    await this.getFiltredMarkers();\r\n  }\r\n\r\n  getData = async () => {\r\n    const { data } = await getStations();\r\n    const maxMarkers = data.nhits;\r\n\r\n    const markers = [];\r\n\r\n    data.records.forEach(e => {\r\n      if (e.hasOwnProperty(\"geometry\")) {\r\n        var lat = e.geometry.coordinates[1];\r\n        var lng = e.geometry.coordinates[0];\r\n        var recordTime = new Date(e.record_timestamp).toLocaleDateString();\r\n        var {\r\n          station_code: codeStation,\r\n          station_name: nomStation,\r\n          station_state: etatStation,\r\n          nbedock: nbBornesTotal,\r\n          nbfreeedock: nbBornesDisponibles,\r\n          nbbike: nbVelosMecaniques,\r\n          nbebike: nbVelosElectriques,\r\n          creditcard: achatCB\r\n        } = e.fields;\r\n\r\n        markers.push({\r\n          codeStation,\r\n          nomStation,\r\n          position: { lat, lng },\r\n          etatStation,\r\n          nbBornesTotal,\r\n          nbBornesDisponibles,\r\n          nbVelosMecaniques,\r\n          nbVelosElectriques,\r\n          achatCB,\r\n          recordTime\r\n        });\r\n      }\r\n\r\n      this.setState({ markers, maxMarkers });\r\n    });\r\n  };\r\n\r\n  onChangeMarkersRange = async rangeMarkers => {\r\n    await this.setState({ rangeMarkers });\r\n    await this.getFiltredMarkers();\r\n  };\r\n\r\n  getFiltredMarkers = () => {\r\n    const markers = [...this.state.markers];\r\n    const filtredMarkers = markers.slice(0, this.state.rangeMarkers);\r\n    this.setState({ filtredMarkers });\r\n  };\r\n\r\n  onMarkerClick = (props, marker, e) => {\r\n    const markerSource = this.state.markers.find(\r\n      m => m.codeStation === marker.uid\r\n    );\r\n    Object.assign(marker, markerSource);\r\n    this.setState({\r\n      activeMarker: marker,\r\n      activePosition: marker.position,\r\n      selectedPlace: props,\r\n      showingInfoWindow: true\r\n    });\r\n  };\r\n\r\n  onMapClicked = props => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      filtredMarkers,\r\n      maxMarkers,\r\n      activeMarker,\r\n      selectedPlace,\r\n      showingInfoWindow,\r\n      rangeMarkers\r\n    } = this.state;\r\n\r\n    const { google } = this.props;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"map col-md-4 col-sm-6 col-xs-12\">\r\n          <Map\r\n            onClick={this.onMapClicked}\r\n            google={google}\r\n            zoom={12}\r\n            initialCenter={{\r\n              lat: selectedPlace.position.lat,\r\n              lng: selectedPlace.position.lng\r\n            }}\r\n          >\r\n            {filtredMarkers.map(marker => (\r\n              <Marker\r\n                uid={marker.codeStation}\r\n                key={marker.codeStation}\r\n                name={marker.nomStation}\r\n                title={marker.nomStation}\r\n                position={marker.position}\r\n                onClick={this.onMarkerClick}\r\n                opacity={0.3}\r\n              />\r\n            ))}\r\n\r\n            <InfoWindow marker={activeMarker} visible={showingInfoWindow}>\r\n              <div>\r\n                <h6>{selectedPlace.name}</h6>\r\n              </div>\r\n            </InfoWindow>\r\n          </Map>\r\n        </div>\r\n        <div id=\"infos\" className=\"col text-center\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 mt-4\">\r\n              <h4>\r\n                <span style={this.countStyle}>{rangeMarkers}</span> marqueurs de\r\n                stations <SvgVelibLogo width=\"70px\" height=\"70px\" /> sur{\" \"}\r\n                <span style={this.countStyle}>{maxMarkers}</span> vont\r\n                s'afficher sur la carte, faites glisser le vélo !\r\n              </h4>\r\n              <Slider\r\n                onChange={this.onChangeMarkersRange}\r\n                maxMarkers={maxMarkers}\r\n                value={rangeMarkers}\r\n              />\r\n            </div>\r\n            <div className=\"col tableInfos\">\r\n              {activeMarker ? (\r\n                <TableInfo activeMarker={activeMarker} />\r\n              ) : (\r\n                <h4 style={{ marginTop: \"200px\" }}>\r\n                  Clickez sur un marqueur pour afficher les disponibilités en\r\n                  temps réel !\r\n                </h4>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport Velib from \"./components/velib\";\nimport \"./App.css\";\n\nconst App: React.FC = () => {\n  return <Velib />;\n};\n\nexport { App };\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyD7fqhPuLV6HNyLtwQnKB8WMQyuAbME45g\"\n})(Velib);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}